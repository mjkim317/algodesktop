{"ast":null,"code":"//import React from 'react';\n\n/*import React, { Component } from 'react';\n//import { Link } from 'react-router-dom';\nimport Header from '../filecomponents/Header';\nimport Container from '../filecomponents/Container';\nimport '../style/App.css';\nimport Element from \"../filesort/Element\";\nimport ElementMakeType from \"../filesort/ElementMakeType\";\nimport SortFactory from \"../filesort/SortFactory\";\nimport SortType from \"../filesort/SortType\";\n\nclass FilePage extends Component {\n\n    sortFactory = new SortFactory();\n    sortInstance;\n\n    constructor(props) {\n        super(props);\n        const length = 100;\n        //this.arr = null;\n        let element = new Element();\n        element.initElements(length, ElementMakeType.SELECTFILE);\n\n        this.state = {\n            length,\n            element,\n            sortType: SortType.Bubble,\n            elementType: ElementMakeType.SELECTFILE,\n            delay: 10,\n            //list: []\n        }\n    }\n\n    handleArray = (list) => {\n        console.log(list);\n        this.setState({\n            list,\n        }, this.remakeFileList);\n\n    }\n\n    remakeFileList = () => {\n        this.handleStop();\n        const {\n            element,\n            length,\n            elementType,\n            list\n        } = this.state;\n        element.initElements(length, elementType, list);\n        this.setState({element});\n    }\n\n    remakeHeightList = () => {\n        this.handleStop();\n        const {\n            element,\n            length,\n            //elementType\n        } = this.state;\n        //element.initElements(length, elementType);\n        this.setState({element});\n    }\n\n    updateElementArr = (arr) => {\n        const element = this.state.element;\n        element.arr = arr;\n        this.setState({\n            element\n        });\n    }\n\n    handleSorting = () => {\n        const {\n            sortType,\n            delay\n        } = this.state;\n        this.sortInstance = this.sortFactory.getSort(sortType, this.state.element.arr, delay, this.updateElementArr, this.handleSorting);\n        this.handleStop();\n        this.sortInstance.start();\n    }\n\n    handleStop = () => {\n        if(this.sortInstance) {\n            this.sortInstance.stop();\n        }\n    }\n\n    handleDelay = (delay) => {\n        this.handleStop();\n        this.setState({\n            delay\n        });\n    }\n\n    handleSortType = (sortType) => {\n        this.handleStop();\n        this.setState({\n            sortType\n        }, this.remakeHeightList);\n    }\n\n    render() {\n        const {\n            sorting,\n            length,\n            delay,\n            element,\n            sortType,\n            elementType\n        } = this.state;\n        \n        const {\n            handleLength,\n            handleSorting,\n            handleStop,\n            handleDelay,\n            handleSortType,\n            remakeHeightList,\n            handleElemType\n        } = this;\n\n        return (\n            <div className=\"App\">\n                <Header/>\n                <Container\n                    {...this.state}\n                    {...this}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FilePage;\n\n\n\n\n    \n\n\n*/","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/pages/FilePage.js"],"names":[],"mappingssourcesContent":["//import React from 'react';\n/*import React, { Component } from 'react';\n//import { Link } from 'react-router-dom';\nimport Header from '../filecomponents/Header';\nimport Container from '../filecomponents/Container';\nimport '../style/App.css';\nimport Element from \"../filesort/Element\";\nimport ElementMakeType from \"../filesort/ElementMakeType\";\nimport SortFactory from \"../filesort/SortFactory\";\nimport SortType from \"../filesort/SortType\";\n\nclass FilePage extends Component {\n\n    sortFactory = new SortFactory();\n    sortInstance;\n\n    constructor(props) {\n        super(props);\n        const length = 100;\n        //this.arr = null;\n        let element = new Element();\n        element.initElements(length, ElementMakeType.SELECTFILE);\n\n        this.state = {\n            length,\n            element,\n            sortType: SortType.Bubble,\n            elementType: ElementMakeType.SELECTFILE,\n            delay: 10,\n            //list: []\n        }\n    }\n\n    handleArray = (list) => {\n        console.log(list);\n        this.setState({\n            list,\n        }, this.remakeFileList);\n\n    }\n\n    remakeFileList = () => {\n        this.handleStop();\n        const {\n            element,\n            length,\n            elementType,\n            list\n        } = this.state;\n        element.initElements(length, elementType, list);\n        this.setState({element});\n    }\n\n    remakeHeightList = () => {\n        this.handleStop();\n        const {\n            element,\n            length,\n            //elementType\n        } = this.state;\n        //element.initElements(length, elementType);\n        this.setState({element});\n    }\n\n    updateElementArr = (arr) => {\n        const element = this.state.element;\n        element.arr = arr;\n        this.setState({\n            element\n        });\n    }\n\n    handleSorting = () => {\n        const {\n            sortType,\n            delay\n        } = this.state;\n        this.sortInstance = this.sortFactory.getSort(sortType, this.state.element.arr, delay, this.updateElementArr, this.handleSorting);\n        this.handleStop();\n        this.sortInstance.start();\n    }\n\n    handleStop = () => {\n        if(this.sortInstance) {\n            this.sortInstance.stop();\n        }\n    }\n\n    handleDelay = (delay) => {\n        this.handleStop();\n        this.setState({\n            delay\n        });\n    }\n\n    handleSortType = (sortType) => {\n        this.handleStop();\n        this.setState({\n            sortType\n        }, this.remakeHeightList);\n    }\n\n    render() {\n        const {\n            sorting,\n            length,\n            delay,\n            element,\n            sortType,\n            elementType\n        } = this.state;\n        \n        const {\n            handleLength,\n            handleSorting,\n            handleStop,\n            handleDelay,\n            handleSortType,\n            remakeHeightList,\n            handleElemType\n        } = this;\n\n        return (\n            <div className=\"App\">\n                <Header/>\n                <Container\n                    {...this.state}\n                    {...this}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FilePage;\n\n\n\n\n    \n\n\n*/"]},"metadata":{},"sourceType":"module"}