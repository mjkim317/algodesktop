{"ast":null,"code":"import ElementMakeType from \"./ElementMakeType\";\nimport State from \"./State\";\nimport Color from \"./Color\";\nimport { Component } from \"react\";\n\nclass Element extends Component {\n  constructor() {\n    this.arr = null;\n  }\n\n}\n\nexport default Element;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/filesort/Element.js"],"names":["ElementMakeType","State","Color","Component","Element","constructor","arr"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,GAAG;AACV,SAAKC,GAAL,GAAW,IAAX;AACH;;AAH0B;;AA2C/B,eAAeF,OAAf","sourcesContent":["import ElementMakeType from \"./ElementMakeType\";\nimport State from \"./State\";\nimport Color from \"./Color\";\nimport { Component } from \"react\";\n\nclass Element extends Component{\n    constructor() {\n        this.arr = null;\n    }\n\n    initElements = (length, type) => {\n        this.arr = [];\n        let offset;\n        switch (type) {\n            case ElementMakeType.RANDOM:\n                for (let i = 0; i < length; i++) {\n                    const height = Math.random() * 100;\n                    this.arr.push(new State(height, Color.WHITE));\n                }\n                break;\n            case ElementMakeType.ASCENDING:\n                offset = 100 / (length + 1);\n                this.arr.push(new State(offset, Color.WHITE));\n                for (let i = 0; i < length - 1; i++) {\n                    this.arr.push(new State(this.arr[i].height + offset, Color.WHITE));\n                }\n                break;\n            case ElementMakeType.DESCENDING:\n                offset = 100 / (length + 1);\n                this.arr.push(new State(100 - offset, Color.WHITE));\n                for (let i = 0; i < length - 1; i++) {\n                    this.arr.push(new State(this.arr[i].height - offset, Color.WHITE));\n                }\n                break ;\n\n                case ElementMakeType.SELECTFILE:\n                    for (let i = 0; i < length; i++) {\n                        const height = Math.random() * 100;\n                        this.arr.push(new State(height, Color.WHITE));\n                    }\n                    break;\n\n            default:\n                break;\n        }\n    }\n}\n\nexport default Element;"]},"metadata":{},"sourceType":"module"}