{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/components/Setting.js\";\nimport React, { Component } from 'react';\nimport SortType from \"../sort/SortType\";\nimport ElementMakeType from \"../sort/ElementMakeType\";\nimport { getSortName } from \"../sort/SortUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Setting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTypeChange = e => {\n      this.props.handleSortType(parseInt(e.target.value));\n    };\n\n    this.onElemTypeChange = e => {\n      this.props.handleElemType(parseInt(e.target.value));\n    };\n\n    this.onElemCountChange = e => {\n      let length = parseInt(e.target.value) || 1;\n\n      if (length < 1) {\n        length = 1;\n      } else if (length > 100) {\n        //최대 가능 개수 100개 \n        length = 100;\n      }\n\n      this.props.handleLength(parseInt(length));\n    };\n\n    this.onDelayChange = e => {\n      let delay = parseInt(e.target.value) || 1;\n\n      if (delay < 1) {\n        delay = 1;\n      }\n\n      this.props.handleDelay(delay);\n    };\n\n    this.onStartClick = () => {\n      this.props.handleSorting();\n    };\n\n    this.onStopClick = () => {\n      this.props.handleStop();\n    };\n\n    this.onRemakeClick = () => {\n      this.props.remakeHeightList();\n    };\n\n    this.SendArray = list => {\n      console.log(list);\n      this.props.handleArray(list);\n    };\n\n    this.afterFunc = list => {\n      console.log(list); //this.setState( {fileList: list});\n      //console.log(this.state.fileList);\n      //this.props.handleArray();\n\n      this.filearray.push(list);\n      console.log(this.state.fileList);\n    };\n\n    this.state = {\n      fileList: []\n    };\n    this.handleChange.bind(this);\n    this.filearray = null;\n  }\n\n  handleChange(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n    fileReader.readAsText(file);\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.props.handleArray(this.state.fileList);\n      console.log(this.state.fileList);\n      this.afterFunc(list);\n    }; //this.props.handleArray(this.state.fileList);    //설정 안됨\n    //console.log(this.state.fileList);\n\n  }\n  /*handleChange(e){\n      let status = [];\n      const fileObj = e.target.files[0];\n      const reader = new FileReader();\n       let fileloaded = e => {\n          const fileContents = e.target.result;\n          status.push(`File name: \"${fileObj.name}\". ` + `Length: ${fileContents.length} bytes.`);\n          const first80char = fileContents.substring(0,80);\n          status.push (`First 80 characters of the file:\\n${first80char}`)\n          // Show the status messages\n          this.setState ({status: status.join(\"\\n\")});\n      }\n  }*/\n\n\n  render() {\n    const sortingType = [];\n\n    for (const type in SortType) {\n      sortingType[SortType[type]] = getSortName(SortType[type]);\n    }\n\n    const elemType = [];\n\n    for (const type in ElementMakeType) {\n      elemType[ElementMakeType[type]] = type;\n    }\n\n    const {\n      length,\n      delay,\n      sortType,\n      elementType,\n      list\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Sort Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: this.onTypeChange,\n        value: sortType,\n        children: sortingType.map((sort, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: sort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"elemtype\",\n        children: \"Elem Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"elemtype\",\n        onChange: this.onElemTypeChange,\n        value: elementType,\n        children: elemType.map((elem, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: elem\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"num\",\n        children: \"Elem Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"num\",\n        value: length,\n        onChange: this.onElemCountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"delay\",\n        children: \"Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"delay\",\n        value: delay,\n        onChange: this.onDelayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), \"ms\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Start\",\n        onClick: this.onStartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Stop\",\n        onClick: this.onStopClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"remake\",\n        onClick: this.onRemakeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileopen\",\n        children: \"File Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filesave\",\n        children: \"File Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Setting;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/components/Setting.js"],"names":["React","Component","SortType","ElementMakeType","getSortName","Setting","constructor","props","onTypeChange","e","handleSortType","parseInt","target","value","onElemTypeChange","handleElemType","onElemCountChange","length","handleLength","onDelayChange","delay","handleDelay","onStartClick","handleSorting","onStopClick","handleStop","onRemakeClick","remakeHeightList","SendArray","list","console","log","handleArray","afterFunc","filearray","push","state","fileList","handleChange","bind","file","files","fileReader","FileReader","readAsText","onload","text","result","array","split","i","Number","render","sortingType","type","elemType","sortType","elementType","map","sort","index","elem"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SortType from \"../sort/SortType\";\nimport ElementMakeType from \"../sort/ElementMakeType\";\nimport {getSortName} from \"../sort/SortUtils\";\n\nclass Setting extends Component {\n    constructor(props){\n        super(props);\n        this.state = {fileList : []}\n        this.handleChange.bind(this)\n        this.filearray = null;\n    }\n\n\n\n    onTypeChange = (e) => {\n        this.props.handleSortType(parseInt(e.target.value));\n    }\n\n    onElemTypeChange = (e) => {\n        this.props.handleElemType(parseInt(e.target.value));\n    }\n\n    onElemCountChange = (e) => {\n        let length = parseInt(e.target.value) || 1;\n        if (length < 1) {\n            length = 1;\n        } else if (length > 100) { //최대 가능 개수 100개 \n            length = 100;\n        }\n        this.props.handleLength(parseInt(length));\n    }\n\n    onDelayChange = (e) => {\n        let delay = parseInt(e.target.value) || 1;\n        if (delay < 1) {\n            delay = 1;\n        }\n        this.props.handleDelay(delay);\n    }\n\n    onStartClick = () => {\n        this.props.handleSorting();\n    }\n\n    onStopClick = () => {\n        this.props.handleStop();\n    }\n\n    onRemakeClick = () => {\n        this.props.remakeHeightList();\n    }\n\n    SendArray = (list) => {\n        console.log(list);\n        this.props.handleArray(list);\n    }\n\n    afterFunc = (list) => {\n        console.log(list);\n        //this.setState( {fileList: list});\n        //console.log(this.state.fileList);\n        //this.props.handleArray();\n        this.filearray.push(list);\n        console.log(this.state.fileList);\n    }\n\n    handleChange(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.readAsText(file);\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            for(var i=0; i<array.length; i++) {\n                array[i] = Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.props.handleArray(this.state.fileList); \n            console.log(this.state.fileList);\n            this.afterFunc(list);\n        };\n        //this.props.handleArray(this.state.fileList);    //설정 안됨\n        //console.log(this.state.fileList);\n    }\n    \n    /*handleChange(e){\n        let status = [];\n        const fileObj = e.target.files[0];\n        const reader = new FileReader();\n\n        let fileloaded = e => {\n            const fileContents = e.target.result;\n            status.push(`File name: \"${fileObj.name}\". ` + `Length: ${fileContents.length} bytes.`);\n            const first80char = fileContents.substring(0,80);\n            status.push (`First 80 characters of the file:\\n${first80char}`)\n            // Show the status messages\n            this.setState ({status: status.join(\"\\n\")});\n        }\n    }*/\n\n    render() {\n        const sortingType = [];\n        for (const type in SortType) {\n            sortingType[SortType[type]] = getSortName(SortType[type]);\n        }\n        const elemType = [];\n        for (const type in ElementMakeType) {\n            elemType[ElementMakeType[type]] = type;\n        }\n        const {\n            length,\n            delay,\n            sortType,\n            elementType,\n            list\n        } = this.props;\n\n        return (\n            <div className=\"setting\">\n                <label htmlFor=\"type\">Sort Type</label>\n                <br/>\n                <select name=\"type\" onChange={this.onTypeChange} value={sortType}>\n                    {sortingType.map((sort, index) => (\n                        <option value={index} key={index}>{sort}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n                <label htmlFor=\"elemtype\">Elem Type</label>\n                <br/>\n                <select name=\"elemtype\" onChange={this.onElemTypeChange} value={elementType}>\n                    {elemType.map((elem, index) => (\n                        <option value={index} key={index}>{elem}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n                <label htmlFor=\"num\">Elem Count</label>\n                <br/>\n                <input type=\"number\" name=\"num\" value={length} onChange={this.onElemCountChange}/>\n                <br/>\n                <br/>\n                <br/>\n                <label htmlFor=\"delay\">Delay</label>\n                <br/>\n                <input type=\"number\" name=\"delay\" value={delay} onChange={this.onDelayChange}/>ms\n                <br/>\n                <br/>\n                <input type=\"button\" value=\"Start\" onClick={this.onStartClick}/>\n                <input type=\"button\" value=\"Stop\" onClick={this.onStopClick}/>\n                <input type=\"button\" value=\"remake\" onClick={this.onRemakeClick}/>\n                <br/>\n                <br/>\n                <label htmlFor=\"fileopen\">File Open</label>\n                <br/>\n                <input type= \"file\" accept='.txt' onChange={this.handleChange.bind(this)}/>\n\n                <br/>\n                <br/>\n                <label htmlFor=\"filesave\">File Save</label>\n                <br/>\n            </div>\n        )\n    }\n}\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}