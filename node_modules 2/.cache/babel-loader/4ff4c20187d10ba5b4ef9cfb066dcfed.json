{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/components/BarCanvas.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BarCanvas extends Component {\n  constructor() {\n    this.arr = this.state.element;\n  }\n\n  handleChange(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n    fileReader.readAsText(file);\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.props.handleArray(this.state.fileList);\n      console.log(this.state.fileList);\n      this.afterFunc(list);\n    }; //this.props.handleArray(this.state.fileList);    //설정 안됨\n    //console.log(this.state.fileList);\n\n  }\n\n  componentDidMount() {\n    if (this.ctx === null) {\n      this.ctx = this.refs.canvas.getContext(\"2d\", {\n        alpha: false\n      });\n    }\n\n    const Draw = () => {\n      this.ctx.drawImage(this.Canvas, 0, 0);\n      requestAnimationFrame(Draw);\n    };\n\n    Draw();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      width,\n      height\n    } = this.props;\n    this.Canvas.width = width;\n    this.Canvas.height = height;\n\n    if (this.backCtx === null) {\n      this.backCtx = this.Canvas.getContext(\"2d\", {\n        alpha: false\n      });\n    }\n\n    this.backCtx.fillStyle = \"black\";\n    this.backCtx.fillRect(0, 0, width, height);\n    const element = this.props.element.arr;\n    const w = width / (element.length + 2);\n    this.backCtx.beginPath();\n    let x = w;\n\n    for (const state of element) {\n      this.backCtx.fillStyle = state.color;\n      const h = height * state.height / 100;\n      let y = height - h;\n      this.backCtx.fillRect(x, y, w, h);\n      this.backCtx.rect(x, y, w, h);\n      x += w;\n    }\n\n    this.backCtx.strokeStyle = \"black\";\n    this.backCtx.stroke();\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        value: this.props.element.arr,\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"canvas\",\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BarCanvas;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/components/BarCanvas.js"],"names":["React","Component","BarCanvas","constructor","arr","state","element","handleChange","e","file","target","files","fileReader","FileReader","list","readAsText","onload","text","result","array","split","i","length","Number","props","handleArray","fileList","console","log","afterFunc","componentDidMount","ctx","refs","canvas","getContext","alpha","Draw","drawImage","Canvas","requestAnimationFrame","componentDidUpdate","prevProps","prevState","width","height","backCtx","fillStyle","fillRect","w","beginPath","x","color","h","y","rect","strokeStyle","stroke","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass BarCanvas extends Component {\n    Canvas = document.createElement('canvas');\n    ctx = null;\n    backCtx = null;\n\n    constructor() {\n        this.arr = this.state.element;\n    }\n\n    afterFunc = (list) => {\n        console.log(list);\n        this.setState( {fileList: list});\n        console.log(this.state.fileList);\n        //this.props.handleArray();\n    }\n\n    handleChange(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.readAsText(file);\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            for(var i=0; i<array.length; i++) {\n                array[i] = Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.props.handleArray(this.state.fileList); \n            console.log(this.state.fileList);\n            this.afterFunc(list);\n        };\n        //this.props.handleArray(this.state.fileList);    //설정 안됨\n        //console.log(this.state.fileList);\n    }\n\n    componentDidMount() {\n        if (this.ctx === null) {\n            this.ctx = this.refs.canvas.getContext(\"2d\", {\n                alpha: false\n            });\n        }\n        const Draw = () => {\n            this.ctx.drawImage(this.Canvas, 0, 0);\n            requestAnimationFrame(Draw);\n        };\n        Draw();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            width,\n            height,\n        } = this.props;\n        this.Canvas.width = width;\n        this.Canvas.height = height;\n        if (this.backCtx === null) {\n            this.backCtx = this.Canvas.getContext(\"2d\", {\n                alpha: false\n            });\n        }\n        \n        this.backCtx.fillStyle = \"black\";\n        this.backCtx.fillRect(0, 0, width, height);\n        const element = this.props.element.arr;\n        const w = width / (element.length + 2);\n        this.backCtx.beginPath();\n        let x = w;\n        for (const state of element) {\n            this.backCtx.fillStyle = state.color;\n            const h = (height * state.height) / 100;\n            let y = height - h;\n            this.backCtx.fillRect(x, y, w, h);\n            this.backCtx.rect(x, y, w, h);\n            x += w;\n        }\n        this.backCtx.strokeStyle = \"black\";\n        this.backCtx.stroke();\n    }\n\n    render() {\n        const {width, height} = this.props;\n        return (\n            <div>\n            <button>hi</button>\n            <input type= \"file\" accept='.txt' value={ this.props.element.arr } onChange={this.handleChange.bind(this)}/>\n            <canvas ref='canvas' width={width} height={height}/>\n            </div>\n        )\n    }\n}\n\nexport default BarCanvas;\n"]},"metadata":{},"sourceType":"module"}