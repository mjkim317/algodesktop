{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2 2/src/pages/RandomPage.js\";\nimport React from 'react';\nimport Header from '../bubblesort/SortingVisualizer/Header';\nimport '../bubblesort/SortingVisualizer/SortingViz.css';\nimport { getBubbleSortAnimations } from '../bubblesort/SortingAlgorithms/BubbleSort.js';\nimport { getSelectionSortAnimations } from '../bubblesort/SortingAlgorithms/SelectionSort.js';\nimport { getInsertionSortAnimations } from '../bubblesort/SortingAlgorithms/InsertionSort.js';\nimport { getMergeSort } from '../bubblesort/SortingAlgorithms/MergeSort.js';\nimport { getQuickSortAnimations } from '../bubblesort/SortingAlgorithms/QuickSort.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIMATION_SPEED_MS = 1; // This is the main color of the array bars.\n\nconst PRIMARY_COLOR = 'turquoise'; // This is the color of array bars that are being compared throughout the animations.\n\nconst SECONDARY_COLOR = 'red';\nexport default class SortingViz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.afterFunc = e => {\n      console.log(e);\n      this.setState({\n        array: e\n      });\n      var result = this.state.array;\n      this.bubbleSort();\n      var list = this.state.array;\n\n      for (var i = 0; i < list.length; i++) {\n        list[i] = list[i] / 5;\n      }\n\n      saveToFile_Chrome(\"result.txt\", list, function () {});\n    };\n\n    this.afterFunc1 = e => {\n      console.log(e);\n      this.setState({\n        array: e\n      }); //console.log(this.state.array);\n\n      this.selectionSort();\n      var list = this.state.array;\n\n      for (var i = 0; i < list.length; i++) {\n        list[i] = list[i] / 5;\n      }\n\n      saveToFile_Chrome(\"result.txt\", list, function () {});\n    };\n\n    this.afterFunc2 = e => {\n      console.log(e);\n      this.setState({\n        array: e\n      }); //console.log(this.state.array);\n\n      this.insertionSort();\n      var list = this.state.array;\n\n      for (var i = 0; i < list.length; i++) {\n        list[i] = list[i] / 5;\n      }\n\n      saveToFile_Chrome(\"result.txt\", list, function () {});\n    };\n\n    this.afterFunc3 = e => {\n      console.log(e);\n      this.setState({\n        array: e\n      });\n      this.quickSort();\n      console.log(this.state.array);\n      var list = this.state.array;\n\n      for (var i = 0; i < list.length; i++) {\n        list[i] = list[i] / 5;\n      }\n\n      saveToFile_Chrome(\"result.txt\", list, function () {});\n    };\n\n    this.afterFunc4 = e => {\n      //setTimeout(saveToFile_Chrome(\"result.txt\", this.state.array), 0);\n      console.log(e);\n      this.setState({\n        array: e\n      });\n      this.mergeSort();\n      console.log(this.state.array);\n      var list = this.state.array;\n\n      for (var i = 0; i < list.length; i++) {\n        list[i] = list[i] / 5;\n      }\n\n      saveToFile_Chrome(\"result.txt\", list, function () {});\n    };\n\n    this.state = {\n      array: [],\n      type: 0\n    }; //this.handleSave = this.handleSave.bind(this);\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 1; i <= 100; i++) {\n      array.push(i * 5);\n    }\n\n    this.setState({\n      array\n    });\n  }\n  /*onElemTypeChange = (e) => {\n      this.setState({type: e.target.value});\n      //this.setState( {array: e});\n  }*/\n\n\n  bubbleSort() {\n    const [animations, sortArray] = getBubbleSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      if (isColorChange === true) {\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n\n        if (barIndex === -1) {\n          continue;\n        }\n\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  selectionSort() {\n    const [animations, sortArray] = getSelectionSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = animations[i][0] === \"comparision1\" || animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      if (isColorChange === true) {\n        const color = animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    } // this.setState({array: sortArray})\n\n\n    const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n  }\n\n  insertionSort() {\n    const [animations, sortArray] = getInsertionSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = animations[i][0] === \"comparision1\" || animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      if (isColorChange === true) {\n        const color = animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    } // this.setState({array: sortArray})\n\n\n    const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n  }\n\n  quickSort() {\n    const [animations, sortArray] = getQuickSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length - 1; i++) {\n      const isColorChange = i % 6 === 0 || i % 6 === 1;\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      if (isColorChange === true) {\n        const color = i % 6 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n\n        if (barOneIndex === -1) {\n          continue;\n        }\n\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n\n        if (barIndex === -1) {\n          continue;\n        }\n\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    } // this.setState({array: sortArray})\n\n\n    const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS * animations.length / 2 + 3000);\n  }\n\n  mergeSort() {\n    const animations = getMergeSort(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  handleChange(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 5 * Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.afterFunc(list);\n    };\n\n    fileReader.readAsText(file);\n  }\n\n  handleChange1(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 5 * Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.afterFunc1(list);\n    };\n\n    fileReader.readAsText(file);\n  }\n\n  handleChange2(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 5 * Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.afterFunc2(list);\n    };\n\n    fileReader.readAsText(file);\n  }\n\n  handleChange3(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 5 * Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.afterFunc3(list);\n    };\n\n    fileReader.readAsText(file);\n  }\n\n  handleChange4(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 5 * Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.afterFunc4(list);\n    };\n\n    fileReader.readAsText(file);\n  }\n\n  handleSave(e) {\n    console.log(\"hi\");\n    console.log(this.state.array);\n    saveToFile_Chrome(\"result.txt\", this.state.array);\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randompage\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button\",\n        for: \"input-file\",\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".txt\",\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button1\",\n        for: \"input-file1\",\n        children: \"Selection Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file1\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".txt\",\n        onChange: this.handleChange1.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button2\",\n        for: \"input-file2\",\n        children: \"Insertion Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file2\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".txt\",\n        onChange: this.handleChange2.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button3\",\n        for: \"input-file3\",\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file3\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".txt\",\n        onChange: this.handleChange3.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button4\",\n        for: \"input-file4\",\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file4\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".txt\",\n        onChange: this.handleChange4.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button5\",\n        for: \"input-file5\",\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file5\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".txt\",\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"save\",\n        children: \"Save result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"save-files\",\n        style: {\n          display: \"none\"\n        },\n        onChange: this.handleSave.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: [array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}px`\n          },\n          wid: {\n            width: `$10px`\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction arrayAreEqual(arrayOne, ArrayTwo) {\n  if (arrayOne.length !== ArrayTwo.length) return false;\n\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== ArrayTwo[i]) return false;\n  }\n\n  return true;\n}\n\nfunction saveToFile_Chrome(fileName, content) {\n  var blob = new Blob([content], {\n    type: 'text/plain'\n  });\n  var objURL = window.URL.createObjectURL(blob); // 이전에 생성된 메모리 해제\n\n  if (window.__Xr_objURL_forCreatingFile__) {\n    window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);\n  }\n\n  window.__Xr_objURL_forCreatingFile__ = objURL;\n  var a = document.createElement('a');\n  a.download = fileName;\n  a.href = objURL;\n  a.click();\n}","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/pages/RandomPage.js"],"names":["React","Header","getBubbleSortAnimations","getSelectionSortAnimations","getInsertionSortAnimations","getMergeSort","getQuickSortAnimations","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","SortingViz","Component","constructor","props","afterFunc","e","console","log","setState","array","result","state","bubbleSort","list","i","length","saveToFile_Chrome","afterFunc1","selectionSort","afterFunc2","insertionSort","afterFunc3","quickSort","afterFunc4","mergeSort","type","componentDidMount","resetArray","push","animations","sortArray","isColorChange","arrayBars","document","getElementsByClassName","color","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","newHeight","barStyle","height","temp","RESTORE_TIME","parseInt","barOneIdx","barTwoIdx","handleChange","file","target","files","fileReader","FileReader","onload","text","split","Number","readAsText","handleChange1","handleChange2","handleChange3","handleChange4","handleSave","render","display","bind","map","value","idx","width","arrayAreEqual","arrayOne","ArrayTwo","fileName","content","blob","Blob","objURL","window","URL","createObjectURL","__Xr_objURL_forCreatingFile__","revokeObjectURL","a","createElement","download","href","click"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../bubblesort/SortingVisualizer/Header';\nimport '../bubblesort/SortingVisualizer/SortingViz.css';\nimport {getBubbleSortAnimations} from '../bubblesort/SortingAlgorithms/BubbleSort.js'\nimport {getSelectionSortAnimations} from '../bubblesort/SortingAlgorithms/SelectionSort.js'\nimport {getInsertionSortAnimations} from '../bubblesort/SortingAlgorithms/InsertionSort.js'\nimport {getMergeSort} from '../bubblesort/SortingAlgorithms/MergeSort.js'\nimport {getQuickSortAnimations} from '../bubblesort/SortingAlgorithms/QuickSort.js'\nconst ANIMATION_SPEED_MS = 1;\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'turquoise';\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\nexport default class SortingViz extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            array: [],\n            type: 0\n        }\n        //this.handleSave = this.handleSave.bind(this);\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i=1;i<=100;i++){\n            array.push(i*5)\n        }\n        this.setState({array})\n    }\n\n    /*onElemTypeChange = (e) => {\n        this.setState({type: e.target.value});\n        //this.setState( {array: e});\n    }*/\n\n    bubbleSort(){\n        const [animations,sortArray] = getBubbleSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1);\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (i % 4 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                    continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    selectionSort(){\n        const [animations,sortArray] = getSelectionSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (animations[i][0] === \"comparision1\") || (animations[i][0] === \"comparision2\");\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (animations[i][0] === \"comparision1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [temp, barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [temp, barIndex, newHeight] = animations[i];\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n        // this.setState({array: sortArray})\n        const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n\n    }\n\n    insertionSort(){\n        const [animations,sortArray] = getInsertionSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (animations[i][0] === \"comparision1\") || (animations[i][0] === \"comparision2\");\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (animations[i][0] === \"comparision1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [temp, barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [temp, barIndex, newHeight] = animations[i];\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n        // this.setState({array: sortArray})\n        const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n\n    }\n\n    quickSort(){\n        const [animations,sortArray] = getQuickSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length - 1; i++) {\n            const isColorChange = (i % 6 === 0) || (i % 6 === 1);\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (i % 6 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [barOneIndex, barTwoIndex] = animations[i];\n                if(barOneIndex === -1) {\n                    continue;\n                }\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                    continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n        // this.setState({array: sortArray})\n        const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n\n    }\n\n    mergeSort(){\n        const animations = getMergeSort(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            const isColorChange = i % 3 !== 2;\n            if (isColorChange) {\n                const [barOneIdx, barTwoIdx] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n                setTimeout(() => {\n                barOneStyle.backgroundColor = color;\n                barTwoStyle.backgroundColor = color;\n                },   i * ANIMATION_SPEED_MS);\n            }\n            else {\n                setTimeout(() => {\n                const [barOneIdx, newHeight] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                barOneStyle.height = `${newHeight}px`;\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    afterFunc = (e) => {\n        console.log(e);\n        this.setState( {array: e});\n        var result = this.state.array;\n        this.bubbleSort();\n        var list = this.state.array;\n        for(var i=0; i<list.length; i++) {\n            list[i] = list[i]/5;\n        }\n        saveToFile_Chrome(\"result.txt\", list, function(){\n        });\n    }\n\n    handleChange(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc1 = (e) => {\n        console.log(e);\n        this.setState( {array: e});\n        //console.log(this.state.array);\n        this.selectionSort();\n        var list = this.state.array;\n        for(var i=0; i<list.length; i++) {\n            list[i] = list[i]/5;\n        }\n        saveToFile_Chrome(\"result.txt\", list, function(){\n        });\n    }\n\n    handleChange1(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc1(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc2 = (e) => {\n        console.log(e);\n        this.setState( {array: e});\n        //console.log(this.state.array);\n        this.insertionSort();\n        var list = this.state.array;\n        for(var i=0; i<list.length; i++) {\n            list[i] = list[i]/5;\n        }\n        saveToFile_Chrome(\"result.txt\", list, function(){\n        });\n    }\n\n    handleChange2(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc2(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc3 = (e) => {\n        console.log(e);\n        this.setState( {array: e});\n        this.quickSort();\n        console.log(this.state.array);\n        var list = this.state.array;\n        for(var i=0; i<list.length; i++) {\n            list[i] = list[i]/5;\n        }\n        saveToFile_Chrome(\"result.txt\", list, function(){\n        });\n    }\n\n    handleChange3(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc3(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc4 = (e) => {\n        //setTimeout(saveToFile_Chrome(\"result.txt\", this.state.array), 0);\n        console.log(e);\n        this.setState( {array: e});\n        this.mergeSort();\n        console.log(this.state.array);\n        var list = this.state.array;\n        for(var i=0; i<list.length; i++) {\n            list[i] = list[i]/5;\n        }\n        saveToFile_Chrome(\"result.txt\", list, function(){\n        });\n    }\n\n    handleChange4(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc4(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    handleSave(e){\n        console.log(\"hi\");\n        console.log(this.state.array);\n        saveToFile_Chrome(\"result.txt\", this.state.array);\n    }\n\n    render(){\n        const {array} = this.state;\n        return(\n            <div className=\"randompage\">\n            <Header/>\n            <br/>\n                    <label className=\"input-file-button\" for=\"input-file\">Bubble Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"input-file-button1\" for=\"input-file1\">Selection Sort</label>\n                    <input type=\"file\" id=\"input-file1\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange1.bind(this)}/> \n                    <label className=\"input-file-button2\" for=\"input-file2\">Insertion Sort</label>\n                    <input type=\"file\" id=\"input-file2\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange2.bind(this)}/> \n                    <label className=\"input-file-button3\" for=\"input-file3\">Quick Sort</label>\n                    <input type=\"file\" id=\"input-file3\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange3.bind(this)}/> \n                    <label className=\"input-file-button4\" for=\"input-file4\">Merge Sort</label>\n                    <input type=\"file\" id=\"input-file4\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange4.bind(this)}/> \n                    <label className=\"input-file-button5\" for=\"input-file5\">Heap Sort</label>\n                    <input type=\"file\" id=\"input-file5\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"save\">Save result</label>\n                    <input type=\"button\" id=\"save-files\"  style={{display:\"none\"}} onChange={this.handleSave.bind(this)}/> \n            <br/>\n            <br/>\n            <br/>\n            <div className=\"array-container\">\n            {array.map((value,idx) => (\n                <div\n                className=\"array-bar\"\n                 key={idx}\n                 style={{height: `${value}px`}}\n                 wid = {{width: `$10px`}}\n                 ></div>\n            ))}\n            <br></br>\n            </div>\n            </div>\n        )\n    }\n}\n\nfunction arrayAreEqual(arrayOne,ArrayTwo){\n    if(arrayOne.length !== ArrayTwo.length) return false;\n    for(let i=0;i<arrayOne.length;i++){\n        if(arrayOne[i] !== ArrayTwo[i]) return false;\n    }\n    return true;\n}\n\nfunction saveToFile_Chrome(fileName, content) {\n    var blob = new Blob([content], { type: 'text/plain' });\n    var objURL = window.URL.createObjectURL(blob);\n            \n    // 이전에 생성된 메모리 해제\n    if (window.__Xr_objURL_forCreatingFile__) {\n        window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);\n    }\n    window.__Xr_objURL_forCreatingFile__ = objURL;\n    var a = document.createElement('a');\n    a.download = fileName;\n    a.href = objURL;\n    a.click();\n}\n"]},"metadata":{},"sourceType":"module"}