{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2 2/src/pages/RandomPage.js\";\nimport React from 'react';\nimport Header from '../bubblesort/SortingVisualizer/Header';\nimport '../bubblesort/SortingVisualizer/SortingViz.css';\nimport { getBubbleSortAnimations } from '../bubblesort/SortingAlgorithms/BubbleSort.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIMATION_SPEED_MS = 1; // This is the main color of the array bars.\n\nconst PRIMARY_COLOR = 'turquoise'; // This is the color of array bars that are being compared throughout the animations.\n\nconst SECONDARY_COLOR = 'red';\nexport default class SortingViz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.afterFunc = e => {\n      console.log(e);\n      this.setState({\n        array: e\n      });\n      console.log(this.state.array);\n      this.bubbleSort();\n    };\n\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 1; i <= 100; i++) {\n      array.push(i * 5);\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  bubbleSort() {\n    const [animations, sortArray] = getBubbleSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      if (isColorChange === true) {\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n\n        if (barIndex === -1) {\n          continue;\n        }\n\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`; //barStyle.width = 5;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    } // this.setState({array: sortArray})\n    // const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n    // setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n\n  }\n\n  handleChange(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 5 * Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.afterFunc(list);\n    };\n\n    fileReader.readAsText(file);\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randompage\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-file-button\",\n          for: \"input-file\",\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          style: {\n            display: \"none\"\n          },\n          accept: \".txt\",\n          onChange: this.handleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-file-button\",\n          for: \"input-file\",\n          children: \"Selection Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          style: {\n            display: \"none\"\n          },\n          accept: \".txt\",\n          onChange: this.handleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-file-button\",\n          for: \"input-file\",\n          children: \"Insertion Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          style: {\n            display: \"none\"\n          },\n          accept: \".txt\",\n          onChange: this.handleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-file-button\",\n          for: \"input-file\",\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          style: {\n            display: \"none\"\n          },\n          accept: \".txt\",\n          onChange: this.handleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-file-button\",\n          for: \"input-file\",\n          children: \"Merge Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          style: {\n            display: \"none\"\n          },\n          accept: \".txt\",\n          onChange: this.handleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-file-button\",\n          for: \"input-file\",\n          children: \"Heap Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          style: {\n            display: \"none\"\n          },\n          accept: \".txt\",\n          onChange: this.handleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: [array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}px`\n          },\n          wid: {\n            width: `$10px`\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction arrayAreEqual(arrayOne, ArrayTwo) {\n  if (arrayOne.length !== ArrayTwo.length) return false;\n\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== ArrayTwo[i]) return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/pages/RandomPage.js"],"names":["React","Header","getBubbleSortAnimations","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","SortingViz","Component","constructor","props","afterFunc","e","console","log","setState","array","state","bubbleSort","componentDidMount","resetArray","i","push","animations","sortArray","length","isColorChange","arrayBars","document","getElementsByClassName","color","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","newHeight","barStyle","height","handleChange","file","target","files","fileReader","FileReader","list","onload","text","result","split","Number","readAsText","render","display","bind","map","value","idx","width","arrayAreEqual","arrayOne","ArrayTwo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../bubblesort/SortingVisualizer/Header';\nimport '../bubblesort/SortingVisualizer/SortingViz.css';\nimport {getBubbleSortAnimations} from '../bubblesort/SortingAlgorithms/BubbleSort.js'\n\nconst ANIMATION_SPEED_MS = 1;\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'turquoise';\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\nexport default class SortingViz extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            array: []\n        }\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i=1;i<=100;i++){\n            array.push(i*5)\n        }\n        this.setState({array})\n    }\n\n    bubbleSort(){\n        const [animations,sortArray] = getBubbleSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1);\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (i % 4 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                    continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                    //barStyle.width = 5;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n\n        // this.setState({array: sortArray})\n        // const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n        // setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n    }\n\n    afterFunc = (e) => {\n        console.log(e);\n        this.setState( {array: e});\n        console.log(this.state.array);\n        this.bubbleSort();\n    }\n\n    handleChange(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5*Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    render(){\n        const {array} = this.state;\n        return(\n            <div className=\"randompage\">\n            <Header/>\n            <div className= \"sortBtn\" >\n                    <label className=\"input-file-button\" for=\"input-file\">Bubble Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"input-file-button\" for=\"input-file\">Selection Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"input-file-button\" for=\"input-file\">Insertion Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"input-file-button\" for=\"input-file\">Quick Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"input-file-button\" for=\"input-file\">Merge Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n                    <label className=\"input-file-button\" for=\"input-file\">Heap Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/> \n            </div>\n\n            <div className=\"array-container\">\n                \n            {array.map((value,idx) => (\n                <div\n                className=\"array-bar\"\n                 key={idx}\n                 style={{height: `${value}px`}}\n                 wid = {{width: `$10px`}}\n                 ></div>\n            ))}\n            <br></br>\n            </div>\n            </div>\n        )\n    }\n}\n\nfunction arrayAreEqual(arrayOne,ArrayTwo){\n    if(arrayOne.length !== ArrayTwo.length) return false;\n    for(let i=0;i<arrayOne.length;i++){\n        if(arrayOne[i] !== ArrayTwo[i]) return false;\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}