{"ast":null,"code":"class Sort {\n  constructor(elements, delay, handler, stopHandler) {\n    this.start = () => {\n      this.clearEvent();\n      this.delayList.push(setTimeout(() => this.sort(), 0));\n    };\n\n    this.stop = () => {\n      this.clearEvent();\n      this.handler(this.elements);\n    };\n\n    this.clearEvent = () => {\n      for (const event of this.delayList) {\n        clearTimeout(event);\n      }\n\n      this.delayList = [];\n    };\n\n    this.sort = () => {};\n\n    this.registerCallback = callback => {\n      this.delayList.push(setTimeout(callback, this.delay));\n    };\n\n    this.elements = elements;\n    this.delay = delay;\n    this.handler = handler;\n    this.delayList = [];\n    this.stopHandler = stopHandler;\n    this.list = [];\n  }\n\n}\n\nexport default Sort;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/sort/Sort.js"],"names":["Sort","constructor","elements","delay","handler","stopHandler","start","clearEvent","delayList","push","setTimeout","sort","stop","event","clearTimeout","registerCallback","callback","list"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,EAA2BC,WAA3B,EAAwC;AAAA,SASnDC,KATmD,GAS3C,MAAM;AACV,WAAKC,UAAL;AACA,WAAKC,SAAL,CAAeC,IAAf,CAAoBC,UAAU,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,CAApB,CAA9B;AACH,KAZkD;;AAAA,SAcnDC,IAdmD,GAc5C,MAAM;AACT,WAAKL,UAAL;AACA,WAAKH,OAAL,CAAa,KAAKF,QAAlB;AACH,KAjBkD;;AAAA,SAmBnDK,UAnBmD,GAmBtC,MAAM;AACf,WAAK,MAAMM,KAAX,IAAoB,KAAKL,SAAzB,EAAoC;AAChCM,QAAAA,YAAY,CAACD,KAAD,CAAZ;AACH;;AACD,WAAKL,SAAL,GAAiB,EAAjB;AACH,KAxBkD;;AAAA,SA0BnDG,IA1BmD,GA0B5C,MAAM,CACZ,CA3BkD;;AAAA,SA6BnDI,gBA7BmD,GA6B/BC,QAAD,IAAc;AAC7B,WAAKR,SAAL,CAAeC,IAAf,CAAoBC,UAAU,CAACM,QAAD,EAAW,KAAKb,KAAhB,CAA9B;AACH,KA/BkD;;AAC/C,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKI,SAAL,GAAiB,EAAjB;AACA,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKY,IAAL,GAAY,EAAZ;AACH;;AARM;;AAmCX,eAAejB,IAAf","sourcesContent":["class Sort {\n    constructor(elements, delay, handler, stopHandler) {\n        this.elements = elements;\n        this.delay = delay;\n        this.handler = handler;\n        this.delayList = [];\n        this.stopHandler = stopHandler;\n        this.list = [];\n    }\n\n    start = () => {\n        this.clearEvent();\n        this.delayList.push(setTimeout(() => this.sort(), 0));\n    }\n\n    stop = () => {\n        this.clearEvent();\n        this.handler(this.elements);\n    }\n\n    clearEvent = () => {\n        for (const event of this.delayList) {\n            clearTimeout(event);\n        }\n        this.delayList = [];\n    }\n\n    sort = () => {\n    }\n\n    registerCallback = (callback) => {\n        this.delayList.push(setTimeout(callback, this.delay));\n    }\n}\n\nexport default Sort;\n"]},"metadata":{},"sourceType":"module"}