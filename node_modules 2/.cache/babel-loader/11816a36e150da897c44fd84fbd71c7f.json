{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/components/BarCanvas.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BarCanvas extends Component {\n  constructor(...args) {\n    super(...args);\n    this.Canvas = document.createElement('canvas');\n    this.ctx = null;\n    this.backCtx = null;\n\n    this.afterFunc = list => {\n      console.log(list);\n      this.setState({\n        fileList: list\n      });\n      console.log(this.state.fileList); //this.props.handleArray();\n    };\n  }\n\n  handleChange(e) {\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n    fileReader.readAsText(file);\n\n    fileReader.onload = () => {\n      //console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = Number(array[i]);\n      } //console.log(array);\n\n\n      list = array;\n      this.props.handleArray(this.state.fileList);\n      console.log(this.state.fileList);\n      this.afterFunc(list);\n    }; //this.props.handleArray(this.state.fileList);    //설정 안됨\n    //console.log(this.state.fileList);\n\n  }\n\n  componentDidMount() {\n    if (this.ctx === null) {\n      this.ctx = this.refs.canvas.getContext(\"2d\", {\n        alpha: false\n      });\n    }\n\n    const Draw = () => {\n      this.ctx.drawImage(this.Canvas, 0, 0);\n      requestAnimationFrame(Draw);\n    };\n\n    Draw();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      width,\n      height\n    } = this.props;\n    this.Canvas.width = width;\n    this.Canvas.height = height;\n\n    if (this.backCtx === null) {\n      this.backCtx = this.Canvas.getContext(\"2d\", {\n        alpha: false\n      });\n    }\n\n    this.backCtx.fillStyle = \"black\";\n    this.backCtx.fillRect(0, 0, width, height);\n    const element = this.props.element.arr;\n    const w = width / (element.length + 2);\n    this.backCtx.beginPath();\n    let x = w;\n\n    for (const state of element) {\n      this.backCtx.fillStyle = state.color;\n      const h = height * state.height / 100;\n      let y = height - h;\n      this.backCtx.fillRect(x, y, w, h);\n      this.backCtx.rect(x, y, w, h);\n      x += w;\n    }\n\n    this.backCtx.strokeStyle = \"black\";\n    this.backCtx.stroke();\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        value: list,\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"canvas\",\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BarCanvas;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/components/BarCanvas.js"],"names":["React","Component","BarCanvas","Canvas","document","createElement","ctx","backCtx","afterFunc","list","console","log","setState","fileList","state","handleChange","e","file","target","files","fileReader","FileReader","readAsText","onload","text","result","array","split","i","length","Number","props","handleArray","componentDidMount","refs","canvas","getContext","alpha","Draw","drawImage","requestAnimationFrame","componentDidUpdate","prevProps","prevState","width","height","fillStyle","fillRect","element","arr","w","beginPath","x","color","h","y","rect","strokeStyle","stroke","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass BarCanvas extends Component {\n    Canvas = document.createElement('canvas');\n    ctx = null;\n    backCtx = null;\n\n    afterFunc = (list) => {\n        console.log(list);\n        this.setState( {fileList: list});\n        console.log(this.state.fileList);\n        //this.props.handleArray();\n    }\n    \n    handleChange(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.readAsText(file);\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            for(var i=0; i<array.length; i++) {\n                array[i] = Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.props.handleArray(this.state.fileList); \n            console.log(this.state.fileList);\n            this.afterFunc(list);\n        };\n        //this.props.handleArray(this.state.fileList);    //설정 안됨\n        //console.log(this.state.fileList);\n    }\n\n    componentDidMount() {\n        if (this.ctx === null) {\n            this.ctx = this.refs.canvas.getContext(\"2d\", {\n                alpha: false\n            });\n        }\n        const Draw = () => {\n            this.ctx.drawImage(this.Canvas, 0, 0);\n            requestAnimationFrame(Draw);\n        };\n        Draw();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            width,\n            height,\n        } = this.props;\n        this.Canvas.width = width;\n        this.Canvas.height = height;\n        if (this.backCtx === null) {\n            this.backCtx = this.Canvas.getContext(\"2d\", {\n                alpha: false\n            });\n        }\n        \n        this.backCtx.fillStyle = \"black\";\n        this.backCtx.fillRect(0, 0, width, height);\n        const element = this.props.element.arr;\n        const w = width / (element.length + 2);\n        this.backCtx.beginPath();\n        let x = w;\n        for (const state of element) {\n            this.backCtx.fillStyle = state.color;\n            const h = (height * state.height) / 100;\n            let y = height - h;\n            this.backCtx.fillRect(x, y, w, h);\n            this.backCtx.rect(x, y, w, h);\n            x += w;\n        }\n        this.backCtx.strokeStyle = \"black\";\n        this.backCtx.stroke();\n    }\n\n    render() {\n        const {width, height} = this.props;\n        return (\n            <div>\n            <button>hi</button>\n            <input type= \"file\" accept='.txt' value={list} onChange={this.handleChange.bind(this)}/>\n            <canvas ref='canvas' width={width} height={height}/>\n            </div>\n        )\n    }\n}\n\nexport default BarCanvas;\n"]},"metadata":{},"sourceType":"module"}