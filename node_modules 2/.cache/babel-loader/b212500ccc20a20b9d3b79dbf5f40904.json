{"ast":null,"code":"export function getBubbleSortAnimations(array) {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  bubbleSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n  array = auxillaryArray;\n  return [animations, array];\n}\n\nfunction bubbleSort(auxillaryArray, animations) {\n  const N = auxillaryArray.length;\n\n  for (let i = 0; i < N - 1; i++) {\n    for (let j = 0; j < N - i - 1; j++) {\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n\n      if (auxillaryArray[j] > auxillaryArray[j + 1]) {\n        animations.push([j, auxillaryArray[j + 1]]);\n        animations.push([j + 1, auxillaryArray[j]]);\n        swap(auxillaryArray, j, j + 1);\n      } else {\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n      }\n    }\n  }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/bubblesort/SortingAlgorithms/BubbleSort.js"],"names":["getBubbleSortAnimations","array","animations","auxillaryArray","slice","bubbleSort","javaScriptSortedArray","sort","a","b","console","log","arraysAreEqual","N","length","i","j","push","swap","firstIndex","secondIndex","temp","firstArray","secondArray"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC3C,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,cAAc,GAAGF,KAAK,CAACG,KAAN,EAArB;AACAC,EAAAA,UAAU,CAACF,cAAD,EAAiBD,UAAjB,CAAV;AACA,QAAMI,qBAAqB,GAAGL,KAAK,CAACG,KAAN,GAAcG,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAjC,CAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCC,cAAc,CAACN,qBAAD,EAAwBH,cAAxB,CAApD;AACAF,EAAAA,KAAK,GAAGE,cAAR;AACA,SAAO,CAACD,UAAD,EAAaD,KAAb,CAAP;AACH;;AAED,SAASI,UAAT,CAAoBF,cAApB,EAAoCD,UAApC,EAAgD;AAC5C,QAAMW,CAAC,GAAGV,cAAc,CAACW,MAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,GAAG,CAAxB,EAA2BE,CAAC,EAA5B,EAAgC;AAC5B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,GAAGE,CAAJ,GAAQ,CAA5B,EAA+BC,CAAC,EAAhC,EAAoC;AAChCd,MAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB;AACAd,MAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB;;AACA,UAAIb,cAAc,CAACa,CAAD,CAAd,GAAoBb,cAAc,CAACa,CAAC,GAAG,CAAL,CAAtC,EAA+C;AAC3Cd,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIb,cAAc,CAACa,CAAC,GAAG,CAAL,CAAlB,CAAhB;AACAd,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAC,GAAG,CAAL,EAAQb,cAAc,CAACa,CAAD,CAAtB,CAAhB;AACAE,QAAAA,IAAI,CAACf,cAAD,EAAiBa,CAAjB,EAAoBA,CAAC,GAAG,CAAxB,CAAJ;AACH,OAJD,MAIO;AACHd,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAhB;AACAf,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAhB;AACH;AACJ;AACJ;AACJ;;AAED,SAASC,IAAT,CAAcf,cAAd,EAA8BgB,UAA9B,EAA0CC,WAA1C,EAAuD;AACnD,MAAIC,IAAI,GAAGlB,cAAc,CAACgB,UAAD,CAAzB;AACAhB,EAAAA,cAAc,CAACgB,UAAD,CAAd,GAA6BhB,cAAc,CAACiB,WAAD,CAA3C;AACAjB,EAAAA,cAAc,CAACiB,WAAD,CAAd,GAA8BC,IAA9B;AACH;;AAED,SAAST,cAAT,CAAwBU,UAAxB,EAAoCC,WAApC,EAAiD;AAC7C,MAAID,UAAU,CAACR,MAAX,KAAsBS,WAAW,CAACT,MAAtC,EAA8C;AAC1C,WAAO,KAAP;AACH;;AACD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,UAAU,CAACR,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AACxC,QAAIO,UAAU,CAACP,CAAD,CAAV,KAAkBQ,WAAW,CAACR,CAAD,CAAjC,EAAsC;AAClC,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH","sourcesContent":["export function getBubbleSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    bubbleSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction bubbleSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        for (let j = 0; j < N - i - 1; j++) {\n            animations.push([j, j + 1]);\n            animations.push([j, j + 1]);\n            if (auxillaryArray[j] > auxillaryArray[j + 1]) {\n                animations.push([j, auxillaryArray[j + 1]]);\n                animations.push([j + 1, auxillaryArray[j]]);\n                swap(auxillaryArray, j, j + 1);\n            } else {\n                animations.push([-1, -1]);\n                animations.push([-1, -1]);\n            }\n        }\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}