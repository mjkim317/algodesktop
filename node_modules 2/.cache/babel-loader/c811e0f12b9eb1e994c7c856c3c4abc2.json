{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2/src/components/Setting.js\";\nimport React, { Component } from 'react';\nimport SortType from \"../sort/SortType\";\nimport ElementMakeType from \"../sort/ElementMakeType\";\nimport { getSortName } from \"../sort/SortUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Setting extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onTypeChange = e => {\n      this.props.handleSortType(parseInt(e.target.value));\n    };\n\n    this.onElemTypeChange = e => {\n      this.props.handleElemType(parseInt(e.target.value));\n    };\n\n    this.onElemCountChange = e => {\n      let length = parseInt(e.target.value) || 1;\n\n      if (length < 1) {\n        length = 1;\n      } else if (length > 100) {\n        //최대 가능 개수 100개 \n        length = 100;\n      }\n\n      this.props.handleLength(parseInt(length));\n    };\n\n    this.onDelayChange = e => {\n      let delay = parseInt(e.target.value) || 1;\n\n      if (delay < 1) {\n        delay = 1;\n      }\n\n      this.props.handleDelay(delay);\n    };\n\n    this.onStartClick = () => {\n      this.props.handleSorting();\n    };\n\n    this.onStopClick = () => {\n      this.props.handleStop();\n    };\n\n    this.onRemakeClick = () => {\n      this.props.remakeHeightList();\n    };\n\n    this.SendArray = list => {\n      this.props.handleArray(list);\n    };\n  }\n\n  handleChange(e) {\n    const fileList = [];\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    var list;\n\n    fileReader.onload = () => {\n      console.log(fileReader.result);\n      var text = fileReader.result; //console.log(text);\n\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = Number(array[i]);\n      }\n\n      console.log(array);\n      list = array;\n      console.log(list);\n    };\n\n    fileReader.readAsText(file); //this.SendArray(list);\n\n    this.props.handleArray(list);\n    console.log(list);\n  }\n\n  render() {\n    const sortingType = [];\n\n    for (const type in SortType) {\n      sortingType[SortType[type]] = getSortName(SortType[type]);\n    }\n\n    const elemType = [];\n\n    for (const type in ElementMakeType) {\n      elemType[ElementMakeType[type]] = type;\n    }\n\n    const {\n      length,\n      delay,\n      sortType,\n      elementType,\n      list\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Sort Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: this.onTypeChange,\n        value: sortType,\n        children: sortingType.map((sort, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: sort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"elemtype\",\n        children: \"Elem Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"elemtype\",\n        onChange: this.onElemTypeChange,\n        value: elementType,\n        children: elemType.map((elem, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: elem\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"num\",\n        children: \"Elem Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"num\",\n        value: length,\n        onChange: this.onElemCountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"delay\",\n        children: \"Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"delay\",\n        value: delay,\n        onChange: this.onDelayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), \"ms\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Start\",\n        onClick: this.onStartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Stop\",\n        onClick: this.onStopClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"remake\",\n        onClick: this.onRemakeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileopen\",\n        children: \"File Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        value: list,\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filesave\",\n        children: \"File Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Setting;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2/src/components/Setting.js"],"names":["React","Component","SortType","ElementMakeType","getSortName","Setting","onTypeChange","e","props","handleSortType","parseInt","target","value","onElemTypeChange","handleElemType","onElemCountChange","length","handleLength","onDelayChange","delay","handleDelay","onStartClick","handleSorting","onStopClick","handleStop","onRemakeClick","remakeHeightList","SendArray","list","handleArray","handleChange","fileList","file","files","fileReader","FileReader","onload","console","log","result","text","array","split","i","Number","readAsText","render","sortingType","type","elemType","sortType","elementType","map","sort","index","elem","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SortType from \"../sort/SortType\";\nimport ElementMakeType from \"../sort/ElementMakeType\";\nimport {getSortName} from \"../sort/SortUtils\";\n\nclass Setting extends Component {\n    onTypeChange = (e) => {\n        this.props.handleSortType(parseInt(e.target.value));\n    }\n\n    onElemTypeChange = (e) => {\n        this.props.handleElemType(parseInt(e.target.value));\n    }\n\n    onElemCountChange = (e) => {\n        let length = parseInt(e.target.value) || 1;\n        if (length < 1) {\n            length = 1;\n        } else if (length > 100) { //최대 가능 개수 100개 \n            length = 100;\n        }\n        this.props.handleLength(parseInt(length));\n    }\n\n    onDelayChange = (e) => {\n        let delay = parseInt(e.target.value) || 1;\n        if (delay < 1) {\n            delay = 1;\n        }\n        this.props.handleDelay(delay);\n    }\n\n    onStartClick = () => {\n        this.props.handleSorting();\n    }\n\n    onStopClick = () => {\n        this.props.handleStop();\n    }\n\n    onRemakeClick = () => {\n        this.props.remakeHeightList();\n    }\n\n    SendArray = (list) => {\n        this.props.handleArray(list);\n    }\n\n    handleChange(e){\n        const fileList = [];\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        var list;\n        fileReader.onload = () => {\n            console.log(fileReader.result);\n            var text = fileReader.result\n            //console.log(text);\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = Number(array[i]);\n            }\n            console.log(array);\n            list = array;\n            console.log(list);\n        };\n        fileReader.readAsText(file);\n        //this.SendArray(list);\n        this.props.handleArray(list);\n        console.log(list);\n    }\n\n    render() {\n        const sortingType = [];\n        for (const type in SortType) {\n            sortingType[SortType[type]] = getSortName(SortType[type]);\n        }\n        const elemType = [];\n        for (const type in ElementMakeType) {\n            elemType[ElementMakeType[type]] = type;\n        }\n        const {\n            length,\n            delay,\n            sortType,\n            elementType,\n            list\n        } = this.props;\n\n        return (\n            <div className=\"setting\">\n                <label htmlFor=\"type\">Sort Type</label>\n                <br/>\n                <select name=\"type\" onChange={this.onTypeChange} value={sortType}>\n                    {sortingType.map((sort, index) => (\n                        <option value={index} key={index}>{sort}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n                <label htmlFor=\"elemtype\">Elem Type</label>\n                <br/>\n                <select name=\"elemtype\" onChange={this.onElemTypeChange} value={elementType}>\n                    {elemType.map((elem, index) => (\n                        <option value={index} key={index}>{elem}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n                <label htmlFor=\"num\">Elem Count</label>\n                <br/>\n                <input type=\"number\" name=\"num\" value={length} onChange={this.onElemCountChange}/>\n                <br/>\n                <br/>\n                <br/>\n                <label htmlFor=\"delay\">Delay</label>\n                <br/>\n                <input type=\"number\" name=\"delay\" value={delay} onChange={this.onDelayChange}/>ms\n                <br/>\n                <br/>\n                <input type=\"button\" value=\"Start\" onClick={this.onStartClick}/>\n                <input type=\"button\" value=\"Stop\" onClick={this.onStopClick}/>\n                <input type=\"button\" value=\"remake\" onClick={this.onRemakeClick}/>\n                <br/>\n                <br/>\n                <label htmlFor=\"fileopen\">File Open</label>\n                <br/>\n                <input type= \"file\" accept='.txt' value={list} onChange={this.handleChange.bind(this)} />\n\n                <br/>\n                <br/>\n                <label htmlFor=\"filesave\">File Save</label>\n                <br/>\n            </div>\n        )\n    }\n}\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}