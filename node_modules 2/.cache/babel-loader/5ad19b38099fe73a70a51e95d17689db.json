{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/algo_term_project 2 2/src/filecomponents/Setting.js\";\nimport React, { useState, Component } from \"react\";\nimport axios from \"axios\";\nimport SortType from \"../filesort/SortType\";\nimport ElementMakeType from \"../filesort/ElementMakeType\";\nimport { getSortName } from \"../filesort/SortUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Setting extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: []\n    };\n\n    this.onTypeChange = e => {\n      this.props.handleSortType(parseInt(e.target.value));\n    };\n\n    this.onDelayChange = e => {\n      let delay = parseInt(e.target.value) || 1;\n\n      if (delay < 1) {\n        delay = 1;\n      }\n\n      this.props.handleDelay(delay);\n    };\n\n    this.onStartClick = () => {\n      this.props.handleSorting();\n    };\n\n    this.onStopClick = () => {\n      this.props.handleStop();\n    };\n\n    this.SendArray = list => {\n      console.log(list);\n      this.props.handleArray(list);\n    };\n\n    this.afterFunc = e => {\n      console.log(e);\n      this.setState({\n        fileList: e\n      }); //console.log(this.state.fileList);\n      //this.props.handleArray();\n    };\n  }\n\n  App() {\n    const [file, setFile] = useState();\n    const [fileName, setFileName] = useState(\"\");\n\n    const saveFile = e => {\n      setFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n    };\n\n    const uploadFile = async e => {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"fileName\", fileName);\n\n      try {\n        const res = await axios.post(\"http://localhost:3000/upload\", formData);\n        console.log(res);\n      } catch (ex) {\n        console.log(ex);\n      }\n    };\n  }\n\n  handleChange(e) {\n    //const fileList = [];\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    let list;\n\n    fileReader.onload = () => {\n      console.log(fileReader.result);\n      var text = fileReader.result;\n      var array = text.split(\" \");\n      console.log(array);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = Number(array[i]);\n      }\n\n      console.log(array);\n      list = array;\n      this.afterFunc(list);\n    };\n\n    fileReader.readAsText(file);\n    this.props.handleArray(this.state.fileList);\n    console.log(this.state.fileList);\n  }\n\n  render() {\n    const sortingType = [];\n\n    for (const type in SortType) {\n      sortingType[SortType[type]] = getSortName(SortType[type]);\n    }\n\n    const elemType = [];\n\n    for (const type in ElementMakeType) {\n      elemType[ElementMakeType[type]] = type;\n    }\n\n    const {\n      length,\n      delay,\n      sortType,\n      elementType,\n      list\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Sort Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: this.onTypeChange,\n        value: sortType,\n        children: sortingType.map((sort, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: sort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"delay\",\n        children: \"Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"delay\",\n        value: delay,\n        onChange: this.onDelayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), \"ms\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Start\",\n        onClick: this.onStartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Stop\",\n        onClick: this.onStopClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileopen\",\n        children: \"File Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        value: list,\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: saveFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filesave\",\n        children: \"File Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Setting;","map":{"version":3,"sources":["/Users/admin/Desktop/algo_term_project 2 2/src/filecomponents/Setting.js"],"names":["React","useState","Component","axios","SortType","ElementMakeType","getSortName","Setting","state","fileList","onTypeChange","e","props","handleSortType","parseInt","target","value","onDelayChange","delay","handleDelay","onStartClick","handleSorting","onStopClick","handleStop","SendArray","list","console","log","handleArray","afterFunc","setState","App","file","setFile","fileName","setFileName","saveFile","files","name","uploadFile","formData","FormData","append","res","post","ex","handleChange","fileReader","FileReader","onload","result","text","array","split","i","length","Number","readAsText","render","sortingType","type","elemType","sortType","elementType","map","sort","index","bind"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\nimport axios from \"axios\";\nimport SortType from \"../filesort/SortType\";\nimport ElementMakeType from \"../filesort/ElementMakeType\";\nimport {getSortName} from \"../filesort/SortUtils\";\n\nclass Setting extends Component {\n    state = {\n        fileList : []\n    }\n    \n    App() {\n        const [file, setFile] = useState();\n        const [fileName, setFileName] = useState(\"\");\n      \n        const saveFile = (e) => {\n          setFile(e.target.files[0]);\n          setFileName(e.target.files[0].name);\n        };\n      \n        const uploadFile = async (e) => {\n          const formData = new FormData();\n          formData.append(\"file\", file);\n          formData.append(\"fileName\", fileName);\n          try {\n            const res = await axios.post(\n              \"http://localhost:3000/upload\",\n              formData\n            );\n            console.log(res);\n          } catch (ex) {\n            console.log(ex);\n          }\n        };\n    }\n    onTypeChange = (e) => {\n        this.props.handleSortType(parseInt(e.target.value));\n    }\n\n    onDelayChange = (e) => {\n        let delay = parseInt(e.target.value) || 1;\n        if (delay < 1) {\n            delay = 1;\n        }\n        this.props.handleDelay(delay);\n    }\n\n    onStartClick = () => {\n        this.props.handleSorting();\n    }\n\n    onStopClick = () => {\n        this.props.handleStop();\n    }\n\n    SendArray = (list) => {\n        console.log(list);\n        this.props.handleArray(list);\n    }\n\n    afterFunc = (e) => {\n        console.log(e);\n        this.setState( {fileList: e});\n        //console.log(this.state.fileList);\n        //this.props.handleArray();\n    }\n\n    handleChange(e){\n        //const fileList = [];\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = Number(array[i]);\n            }\n            console.log(array);\n            list = array;\n            this.afterFunc(list);\n        };\n        fileReader.readAsText(file);\n        this.props.handleArray(this.state.fileList);\n        console.log(this.state.fileList);\n    }\n\n    \n\n    render() {\n        const sortingType = [];\n        for (const type in SortType) {\n            sortingType[SortType[type]] = getSortName(SortType[type]);\n        }\n        const elemType = [];\n        for (const type in ElementMakeType) {\n            elemType[ElementMakeType[type]] = type;\n        }\n        const {\n            length,\n            delay,\n            sortType,\n            elementType,\n            list\n        } = this.props;\n\n        return (\n            <div className=\"setting\">\n                <label htmlFor=\"type\">Sort Type</label>\n                <br/>\n                <select name=\"type\" onChange={this.onTypeChange} value={sortType}>\n                    {sortingType.map((sort, index) => (\n                        <option value={index} key={index}>{sort}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n             \n                <label htmlFor=\"delay\">Delay</label>\n                <br/>\n                <input type=\"number\" name=\"delay\" value={delay} onChange={this.onDelayChange}/>ms\n                <br/>\n                <br/>\n                <input type=\"button\" value=\"Start\" onClick={this.onStartClick}/>\n                <input type=\"button\" value=\"Stop\" onClick={this.onStopClick}/>\n                <br/>\n                <br/>\n                <label htmlFor=\"fileopen\">File Open</label>\n                <br/>\n                <input type= \"file\" accept='.txt' value={list} onChange={this.handleChange.bind(this)}/>\n                <br/>\n                <br/>\n                <input type=\"file\" onChange={saveFile} />\n                <label htmlFor=\"filesave\">File Save</label>\n                <br/>\n            </div>\n        )\n    }\n}\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}